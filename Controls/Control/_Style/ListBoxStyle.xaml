<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:attach="clr-namespace:Controls.AttachedProperties"
    xmlns:local="clr-namespace:Controls.Control"
    xmlns:o="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Controls;component/Resources/CommonResources.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ListBoxItemBaseStyle" TargetType="ListBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border
                        Margin="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding Path=(attach:Attach_Border.CornerRadius), RelativeSource={RelativeSource AncestorType=ListBox}}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            TextElement.Foreground="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value=".8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush
                            o:Freeze="True"
                            Opacity="0.5"
                            Color="#4F4F4F" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <!--<Setter Property="Foreground" Value="SpringGreen" />-->
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush
                            o:Freeze="True"
                            Opacity="0.5"
                            Color="#4F4F4F" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ItemsPanelTemplate x:Key="HorizontalItemsPanelTemplate">
        <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal" />
    </ItemsPanelTemplate>

    <ItemsPanelTemplate x:Key="ItemsPanelTemplate">
        <VirtualizingStackPanel IsItemsHost="True" />
    </ItemsPanelTemplate>


    <Style x:Key="ListBoxBaseStyle" TargetType="ListBox">
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{StaticResource Common_White}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="attach:Attach_Border.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="true" />
        <Setter Property="local:ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="local:ScrollViewer.Orientation" Value="Vertical" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemBaseStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding attach:Attach_Border.CornerRadius}"
                        SnapsToDevicePixels="true">
                        <local:ScrollViewer
                            x:Name="PART_ScrollViewer"
                            Padding="{TemplateBinding Padding}"
                            AutoHide="{Binding Path=(local:ScrollViewer.AutoHide), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                            CanMouseWheel="{Binding Path=(local:ScrollViewer.CanMouseWheel), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                            IsInertiaEnabled="{Binding Path=(local:ScrollViewer.IsInertiaEnabled), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                            OnlyHasithPageButton="{Binding Path=(local:ScrollViewer.OnlyHasithPageButton), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                            Orientation="{Binding Path=(local:ScrollViewer.Orientation), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                            PanningMode="{Binding Path=(local:ScrollViewer.PanningMode), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                            ScrollCmd="{Binding Path=(local:ScrollViewer.ScrollCmd), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                            ShowPageButton="{Binding Path=(local:ScrollViewer.ShowPageButton), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </local:ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="local:ScrollViewer.Orientation" Value="Horizontal">
                <Setter Property="ItemsPanel" Value="{StaticResource HorizontalItemsPanelTemplate}" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
            </Trigger>
            <Trigger Property="local:ScrollViewer.Orientation" Value="Vertical">
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                <Setter Property="ItemsPanel" Value="{StaticResource ItemsPanelTemplate}" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style BasedOn="{StaticResource ListBoxBaseStyle}" TargetType="ListBox" />
</ResourceDictionary> 